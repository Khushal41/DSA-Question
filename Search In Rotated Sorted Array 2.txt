Question:- Search In Rotated Sorted Array
Link :- https://www.codingninjas.com/studio/problems/search-in-rotated-sorted-array_630450

int search(int *arr, int n, int key) {
  // Write your code here.
  int low = 0, high = n - 1;
  while (low <= high) {
    int mid = (low + high) / 2;

    // if mid points the target
    if (arr[mid] == key)
      return mid;

    // if left part is sorted:
    if (arr[low] <= arr[mid]) {
      if (arr[low] <= key && key <= arr[mid]) {
        // element exists:
        //Left search
        high = mid - 1;
      } else {
        // element does not exist:
        // Right search  
        low = mid + 1;
      }
    } else { // if right part is sorted:
      if (arr[mid] <= key && key <= arr[high]) {
        // element exists:
        // Right search 
        low = mid + 1;
      } else {
        // element does not exist:
        // Left search 
        high = mid - 1;
      }
    }
  }
  return -1;
}